% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WOC_Functions_FINAL.R
\name{score_woc}
\alias{score_woc}
\title{WoC Lexicon Sentiment Analysis: Dataset Scores}
\usage{
score_woc(
  dat,
  crowdnames = WoC_Crowd,
  scoring = "abs",
  majority = FALSE,
  intensity = FALSE,
  all_lex = FALSE
)
}
\arguments{
\item{dat}{A \code{\link[base]{data.frame}} with a column named "text" containing text documents to perform sentiment analysis on or a \code{\link[base]{vector}} containing text documents. If a vector is provided it is coerced to a dataframe.}

\item{crowdnames}{A named vector object containing character strings of names of lexicons in WoC crowd. Defaults to \code{WoC_Crowd}, where \code{WoC_Crowd =  c("afinn", "bing", "inquirer", "loughran", "nrc", "senticnet", "sentiwn", "slang", "syuzhet", "textblob", "vader", "wkwsci", "socal")}}

\item{scoring}{A character string indicating the type of scoring function to use for individual lexicon and WoC Sentiment Analysis. Defaults to \code{scoring = "abs"}. Scoring can be:

\itemize{
\item \code{"abs"}: The document-level sentiment score is the summation of n-gram sentiment scores for the observation.
\item \code{"rel"}: The document-level sentiment score is the summation of n-gram sentiment scores divided by the number of unigrams in the observation. 
\item \code{"sub"}: The document-level sentiment score is computed as the difference between the number of negative and positive sentiment n-grams divided by the number of unigrams in the observation.

}}

\item{majority}{A logical value. If \code{TRUE}, sentiment scores based on a Majority Vote ensemble method sentiment will be returned in a column named 'maj_vote'. Defaults to \code{majority = FALSE}.}

\item{intensity}{A logical value. If \code{TRUE}, WoC sentiment intensity scores are returned in a column named "WoC_intensity". Otherwise, only polarity scores are returned (in a column named "woc"). Defaults to \code{intensity = FALSE}.}

\item{all_lex}{A logical value. If \code{TRUE}, sentiment intensity scores are returned for all individual lexicons in the crowd. Defaults to \code{all_lex = FALSE}.}
}
\value{
A \code{\link[base]{vector}} of \code{nrow(dat)} length containing WoC sentiment analysis scores. If \code{all_lex = TRUE}, a \code{\link[base]{data.frame}} is returned, which contains one column for each lexicon in the crowd and one "woc" column. If \code{intensity = TRUE}, a column named 'woc_intensity' is also included in the dataframe output. If \code{majority = TRUE}, a column named 'maj_vote' is also included in the dataframe output.
}
\description{
Perform WoC Sentiment Analysis using the default WoC lexicon crowd or a custom lexicon crowd and obtain sentiment polarity scores. Individual lexicon sentiment intensity scores are also returned. Majority Voting ensemble sentiment polarity scores and WoC sentiment intensity scores can also be computed and returned. Scores are computed based on the chosen scoring method. 

To use parallel processing, a cluster must be initialized. If no cluster is intialized, analysis will be performed sequentially instead of in parallel.
}
\examples{
\dontrun{
library(parallel)
library(doParallel)
library(sentimentr)
cores <- detectCores() - 1
cl <- makeCluster(cores)
registerDoParallel(cl)
ce <- course_evaluations[course_evaluations$sentiment != 0,]
cesc <- score_woc(dat = ce)
}

}
